<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020 Oracle and/or its affiliates.
  ~
  ~ Licensed under the Universal Permissive License v 1.0 as shown at
  ~ http://oss.oracle.com/licenses/upl.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>2.2.0</version>
        <relativePath/>
    </parent>

    <groupId>io.helidon.examples.sockshop</groupId>
    <artifactId>carts-mongo</artifactId>

    <properties>
        <mainClass>io.helidon.microprofile.server.Main</mainClass>
        <docker.repo>ghcr.io/helidon-sockshop</docker.repo>
        <docker.version>${project.version}</docker.version>
        <jib.goal>dockerBuild</jib.goal>

        <!-- dependencies -->
        <version.lib.lombok>1.18.10</version.lib.lombok>
        <version.lib.mongo>3.12.8</version.lib.mongo>
        <version.lib.junit>5.6.2</version.lib.junit>
        <version.lib.hamcrest>2.2</version.lib.hamcrest>
        <version.lib.rest-assured>4.3.0</version.lib.rest-assured>

        <version.plugin.surefire>2.22.2</version.plugin.surefire>
        <version.plugin.failsafe>2.22.2</version.plugin.failsafe>
        <version.plugin.surefire.provider.junit>1.3.2</version.plugin.surefire.provider.junit>
        <version.plugin.jib>2.7.1</version.plugin.jib>
    </properties>

    <dependencies>
        <!-- Project dependencies -->
        <dependency>
            <groupId>io.helidon.examples.sockshop</groupId>
            <artifactId>carts-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.examples.sockshop</groupId>
            <artifactId>carts-core</artifactId>
            <classifier>tests</classifier>
            <type>test-jar</type>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Helidon dependencies-->
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>

        <!-- Mongo dependencies -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-sync</artifactId>
            <version>${version.lib.mongo}</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongodb-driver-async</artifactId>
            <version>${version.lib.mongo}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lib.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <!-- test dependencies-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${version.lib.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.34.1</version>
                <executions>
                    <execution>
                        <id>prepare-it-database</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>mongo:4.2.2</name>
                                    <alias>carts-db</alias>
                                    <run>
                                        <ports>
                                            <port>db.port:27017</port>
                                        </ports>
                                        <wait>
                                            <log>(?s)waiting for connections on port 27017
                                            </log>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>remove-it-database</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <db.host>localhost</db.host>
                        <db.port>${db.port}</db.port>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${version.plugin.jib}</version>
                        <configuration>
                            <from>
                                <image>gcr.io/distroless/java@sha256:9d4092ba5e1c9dc4d1490fdead1dd7ea5c64e635b729fee11a6af55f51b337f8</image>
                            </from>
                            <to>
                                <image>${docker.repo}/${project.artifactId}</image>
                                <tags>
                                    <tag>${docker.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <!-- good defaults intended for containers -->
                                <jvmFlags>
                                    <jvmFlag>-server</jvmFlag>
                                    <jvmFlag>-Djava.awt.headless=true</jvmFlag>
                                    <jvmFlag>-XshowSettings:all</jvmFlag>
                                    <jvmFlag>-XX:+PrintCommandLineFlags</jvmFlag>
                                    <jvmFlag>-XX:+UnlockDiagnosticVMOptions</jvmFlag>
                                    <jvmFlag>-XX:InitialRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MinRAMPercentage=70</jvmFlag>
                                    <jvmFlag>-XX:MaxRAMPercentage=70</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>7001</port>
                                </ports>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
