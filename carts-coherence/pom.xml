<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.helidon.applications</groupId>
        <artifactId>helidon-mp</artifactId>
        <version>1.4.4</version>
        <relativePath/>
    </parent>

    <groupId>io.helidon.examples.sockshop</groupId>
    <artifactId>carts-coherence</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <mainClass>io.helidon.microprofile.server.Main</mainClass>
        <docker.repo>helidon/sockshop</docker.repo>
        <docker.version>${project.version}</docker.version>
        <jib.goal>dockerBuild</jib.goal>

        <!-- dependencies -->
        <version.lib.coherence>14.1.2-0-0-SNAPSHOT</version.lib.coherence>
        <version.lib.lombok>1.18.10</version.lib.lombok>
        <version.lib.junit>5.5.0</version.lib.junit>
        <version.lib.hamcrest>1.3</version.lib.hamcrest>
        <version.lib.rest-assured>4.3.0</version.lib.rest-assured>

        <version.plugin.surefire>2.22.1</version.plugin.surefire>
        <version.plugin.failsafe>2.22.1</version.plugin.failsafe>
        <version.plugin.surefire.provider.junit>1.3.2</version.plugin.surefire.provider.junit>
    </properties>

    <dependencies>
        <!-- Project dependencies -->
        <dependency>
            <groupId>io.helidon.examples.sockshop</groupId>
            <artifactId>carts-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.helidon.examples.sockshop</groupId>
            <artifactId>carts-core</artifactId>
            <classifier>tests</classifier>
            <type>test-jar</type>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Helidon dependencies-->
        <dependency>
            <groupId>io.helidon.microprofile.bundles</groupId>
            <artifactId>helidon-microprofile</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
        </dependency>

        <!-- Coherence dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-cdi</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-mp-metrics</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lib.lombok}</version>
            <scope>provided</scope>
        </dependency>

        <!--JPA -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- test dependencies-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${version.lib.hamcrest}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.lib.rest-assured}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>1.8.0</version>
                        <configuration>
                            <to>
                                <image>${docker.repo}/${project.artifactId}</image>
                                <tags>
                                    <tag>${docker.version}</tag>
                                </tags>
                            </to>
                            <container>
                                <!-- good defaults intended for containers -->
                                <jvmFlags>
                                    <jmxFlag>-server</jmxFlag>
                                    <jmxFlag>-Djava.awt.headless=true</jmxFlag>
                                    <jmxFlag>-XX:+UnlockExperimentalVMOptions</jmxFlag>
                                    <jmxFlag>-XX:+UseCGroupMemoryLimitForHeap</jmxFlag>
                                    <jmxFlag>-XX:InitialRAMFraction=2</jmxFlag>
                                    <jmxFlag>-XX:MinRAMFraction=2</jmxFlag>
                                    <jmxFlag>-XX:MaxRAMFraction=2</jmxFlag>
                                    <jmxFlag>-XX:+UseG1GC</jmxFlag>
                                </jvmFlags>
                                <mainClass>${mainClass}</mainClass>
                                <ports>
                                    <port>7001</port>
                                </ports>
                            </container>
                            <containerizingMode>packaged</containerizingMode>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>${jib.goal}</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>